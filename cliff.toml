# git-cliff ~ default configuration file
# https://git-cliff.org/docs/configuration
#
# Lines starting with "#" are comments.
# Configuration options are organized into tables and keys.
# See documentation for more information on available options.

[changelog]
# 变更日志标题模板
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """

{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{% macro print_commit(commit) -%}
    - {% if commit.scope %}*({{ commit.scope }})* {% endif %}\
        {% if commit.breaking %}[**重大变更**] {% endif %}\
        {{ commit.message | upper_first }} - \
        ([{{ commit.id | truncate(length=7, end="") }}]({{ self::remote_url() }}/commit/{{ commit.id }}))\
{% endmacro -%}

{% if version %}\
    {% if previous.version %}\
        ## [{{ version | trim_start_matches(pat="v") }}]\
          ({{ self::remote_url() }}/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
    {% else %}\
        ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
    {% endif %}\
{% else %}\
    ## [未发布]
{% endif %}\

{% if extra %}
  ### 📦️ 依赖
  {% for dependencies in extra.dependencies %}
  - {{ dependencies.name }} : {{ dependencies.version }}\
  {% endfor -%}
{% endif %}
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        {{ self::print_commit(commit=commit) }}
    {%- endfor %}
    {% for commit in commits %}
        {%- if not commit.scope -%}
            {{ self::print_commit(commit=commit) }}
        {% endif -%}
    {% endfor -%}
{% endfor -%}
{%- if github -%}
{% if github.contributors | filter(attribute="is_first_time", value=true) | length != 0 %}
  ## 新贡献者 ❤️
{% endif %}\
{% for contributor in github.contributors | filter(attribute="is_first_time", value=true) %}
  * @{{ contributor.username }} 做出了他们的第一次贡献
    {%- if contributor.pr_number %} in \
      [#{{ contributor.pr_number }}]({{ self::remote_url() }}/pull/{{ contributor.pr_number }}) \
    {%- endif %}
{%- endfor -%}
{%- endif %}\n
"""

# 变更日志页脚模板
# footer = """
# <!-- generated by git-cliff -->
# """

# 删除前后空格
trim = true
# 后处理器
postprocessors = [
  # { pattern = '<REPO>', replace = "https://github.com/orhun/git-cliff" }, # replace repository URL
]
# render body even when there are no releases to process
# render_always = true
# output file path
# output = "test.md"

[git]
# 根据 https://www.conventionalcommits.org 解析提交
conventional_commits = true
# 过滤掉非传统提交
filter_unconventional = true
# 将每次提交的每一行视为一个单独的提交
split_commits = false
# 用于预处理提交消息的正则表示式
commit_preprocessors = [
  { pattern = '^[0-9]+\.(.*)', replace = "$1" },
  { pattern = "(<.*>)", replace = "`$1`"},
  { pattern = "：", replace = ":"},
]
# 正则表达式用于解析和分组提交
commit_parsers = [
  { message = "^feat|^特性|^新增", group = "<!-- 0 -->🚀 特性" },
  { message = "^fix|^Bug|^修复", group = "<!-- 1 -->🐛 Bug 修复" },
  { message = "^doc|^文档", group = "<!-- 3 -->📚 文档" },
  { message = "^perf|^性能", group = "<!-- 4 -->⚡ 性能" },
  { message = "^refactor|^重构", group = "<!-- 2 -->🚜 重构" },
  { message = "^style|^css|^样式", group = "<!-- 5 -->🎨 样式" },
  { message = "^test|^测试", group = "<!-- 6 -->🧪 测试" },
  { message = "^Update changelog", skip = true },
  { message = "^V ->", skip = true },
  { message = "^chore|^ci", group = "<!-- 7 -->⚙️ 杂项任务" },
  { body = ".*security", group = "<!-- 8 -->🛡️ 安全" },
  { message = "^revert", group = "<!-- 9 -->◀️ 退回" },
  { message = ".*", group = "<!-- 10 -->💼 修改" },
]
# 防止因匹配跳过提交解析器而跳过破坏性更改
protect_breaking_commits = false
# 过滤掉与提交解析器不匹配的提交
filter_commits = false
# 匹配git标签的正则表达式
# tag_pattern = "v[0-9].*"
# 跳过标签的正则表示式
# skip_tags = "beta|alpha"
# 正则表达式用于忽略标签
# ignore_tags = "rc|v2.1.0|v2.1.1"
# 对标签进行拓扑排序
topo_order = false
# 按 oldest/newest  顺序对章节内的提交进行排序
sort_commits = "newest"